<!-- see https://github.com/pagemachine/typo3-formlog/tree/master for an example -->
<ruleset name="coding-style">
    <description>Coding style description</description>

    <!-- 2. Files -->
    <file>Classes</file>
    <file>Configuration</file>
    <file>Resources</file>
    <file>ext_emconf.php</file>
    <file>ext_localconf.php</file>
    <file>ext_tables.php</file>

    <exclude-pattern>vendor</exclude-pattern>
    <exclude-pattern>*.js</exclude-pattern>
    <exclude-pattern>*.css</exclude-pattern>
    <exclude-pattern>*.scss</exclude-pattern>

    <exclude-pattern>*/.(inc|css|scss|js)$</exclude-pattern>
    <exclude-pattern>*/node_modules$</exclude-pattern>
    <exclude-pattern>*/bower_components$</exclude-pattern>

    <!--<exclude-pattern>*/src/Standards/*/Tests/*\.(inc|css|js)$</exclude-pattern>
    <exclude-pattern>*/tests/Core/*/*\.(inc|css|js|scss)$</exclude-pattern>
    <exclude-pattern>*/tests/Core/*/Fixtures/*\.php$</exclude-pattern>
   	-->
    <rule ref="PSR2">
        <exclude name="Generic.Files.LineLength"/>
        <exclude name="Generic.WhiteSpace.ScopeIndent"/>
        <exclude name="PSR2.Files.ClosingTag"/>
        <exclude name="Squiz.WhiteSpace.ScopeClosingBrace"/>
    </rule>

    <rule ref="Internal.NoCodeFound">
        <severity>0</severity>
    </rule>


    <rule ref="PSR1.Files.SideEffects.FoundWithSymbols">
        <exclude-pattern>Tests/Functional/Domain/Form/Finishers/functions.php</exclude-pattern>
    </rule>

    <rule ref="PSR1.Methods.CamelCapsMethodName.NotCamelCaps">
        <exclude-pattern>Classes/Hooks/DataHandlerHook.php</exclude-pattern>
    </rule>

    <rule ref="Generic.PHP.NoSilencedErrors">
        <properties>
            <property name="error" type="bool" value="true"/>
        </properties>
    </rule>

    <rule ref="CakePHP.Commenting.DocBlockAlignment"/>
    <rule ref="CakePHP.Formatting.BlankLineBeforeReturn"/>
    <rule ref="CakePHP.WhiteSpace.EmptyLines"/>

    <rule ref="SlevomatCodingStandard.Arrays.TrailingArrayComma"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.AssignmentInCondition"/>
    <rule ref="SlevomatCodingStandard.ControlStructures.DisallowYodaComparison"/>
    <rule ref="SlevomatCodingStandard.Exceptions.DeadCatch"/>
    <rule ref="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses"/>
    <rule ref="SlevomatCodingStandard.Namespaces.DisallowGroupUse"/>
    <rule ref="SlevomatCodingStandard.Namespaces.MultipleUsesPerLine"/>
    <!--<rule ref="SlevomatCodingStandard.Namespaces.UnusedUses"/>-->
    <rule ref="SlevomatCodingStandard.Namespaces.UseDoesNotStartWithBackslash"/>
    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
        <properties>
            <!--<property name="newlinesCountBetweenOpenTagAndDeclare" type="int" value="1"/>-->
            <property name="spacesCountAroundEqualsSign" type="int" value="0"/>
        </properties>
        <!--<exclude-pattern>x/y</exclude-pattern>-->
    </rule>
    <rule ref="SlevomatCodingStandard.TypeHints.LongTypeHints"/>
    <rule ref="SlevomatCodingStandard.TypeHints.ParameterTypeHintSpacing"/>
    <rule ref="SlevomatCodingStandard.TypeHints.ReturnTypeHintSpacing"/>

</ruleset>
